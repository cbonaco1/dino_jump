{"version":3,"sources":["webpack:///webpack/bootstrap 2f6488867b933b9e5d6e","webpack:///./dinoGame.js","webpack:///./javascript/game.js","webpack:///./javascript/obstacle.js","webpack:///./javascript/dino.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,yBAAyB;AAC1C;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAG;;AAEH,EAAC;;;;;;;AC5DD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC/MA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtDA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2f6488867b933b9e5d6e\n **/","var Game = require('./javascript/game');\nvar Dino = require('./javascript/dino');\nvar Obstacle = require('./javascript/obstacle');\n\n$(document).ready(function() {\n  var dino = new Dino(document.getElementById(\"dino\"));\n  var makeJump = true;\n\n  var startButtons = document.getElementsByClassName(\"level-button\");\n  for (var i = 0; i < startButtons.length; i++) {\n    startButtons[i].addEventListener(\"click\", function(e){\n\n      var game = new Game(e.target.value);\n\n      if (!game.started) {\n        game.start();\n        dino.setJumpHeight(game.settings.jumpHeight);\n      }\n\n    });\n  }\n\n  document.addEventListener(\"keydown\", function(e){\n    console.log(e.keyCode);\n    if (e.keyCode === 40) {\n      e.preventDefault();\n      dino.duck();\n    }\n\n    //32 == space bar\n    if ((e.keyCode === 32) || (e.keyCode == 38)) {\n      e.preventDefault();\n\n      //prevents the dino from being held up if the user\n      //holds down spacebar\n      if (makeJump) {\n        dino.jump();\n      }\n      makeJump = false;\n    }\n\n    if (e.keyCode == 39) {\n      dino.slideRight();\n    }\n    if (e.keyCode == 37) {\n      dino.slideLeft();\n    }\n  });\n\n  document.addEventListener(\"keyup\", function(e){\n    makeJump = true;\n\n    //40 == down key\n    if (e.keyCode === 40) {\n      e.preventDefault();\n      dino.rise();\n    }\n\n  });\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./dinoGame.js\n ** module id = 0\n ** module chunks = 0\n **/","var Obstacle = require('./obstacle');\n\nvar x = 0;\n\nvar Game = function(level) {\n  this.score = 0;\n  this.started = false;\n  this.dino = document.getElementById(\"dino\");\n  this.obstacles = [];\n  this.field = document.getElementById(\"game-field\");\n  this.settings = this.setIntervals(level);\n}\n\n//Sets gameplay settings\nGame.prototype.setIntervals = function (difficulty) {\n  var settings = {}\n\n  switch (difficulty) {\n    case \"easy\":\n      settings[\"level\"] = \"easy\";\n      settings[\"interval\"] = 3000;\n      settings[\"speed\"] = \"left 2.5s\";\n      settings[\"jumpHeight\"] = \"100px\";\n      settings[\"minObstacleDimension\"] = 30;\n      settings[\"maxObstacleDimension\"] = 50;\n      settings[\"doubleScoreInterval\"] = 62000;\n      break;\n    case \"medium\":\n    settings[\"level\"] = \"medium\";\n      settings[\"interval\"] = 1500;\n      settings[\"speed\"] = \"left 1.5s\";\n      settings[\"jumpHeight\"] = \"150px\";\n      settings[\"minObstacleDimension\"] = 50;\n      settings[\"maxObstacleDimension\"] = 100;\n      settings[\"doubleScoreInterval\"] = 32000;\n      break;\n    case \"hard\":\n      settings[\"level\"] = \"hard\";\n      settings[\"interval\"] = 1000;\n      settings[\"speed\"] = \"left 1.0s\";\n      settings[\"jumpHeight\"] = \"200px\";\n      settings[\"minObstacleDimension\"] = 100;\n      settings[\"maxObstacleDimension\"] = 140;\n      settings[\"doubleScoreInterval\"] = 17000;\n      break;\n  }\n  return settings;\n};\n\n//Creates obstacle, adds it to Game queue,\n//adds it to the DOM, and then slide it\nGame.prototype.createObstacle = function () {\n\n  var obstacle = new Obstacle(this);\n\n  //add the obstacle to the Game's queue of obstacles\n  this.addObstacle(obstacle.domElement);\n\n  //append obstacle to game-field\n  this.field.appendChild(obstacle.domElement);\n\n  //10ms after obstacle is created, slide it\n  window.setTimeout(function() {\n    obstacle.slide();\n  }.bind(this), 10);\n\n};\n\n//Creates obstacles at random intervals\nGame.prototype.init = function () {\n  var generateObstacles = function() {\n    this.createObstacle();\n    var rand = Math.floor((Math.random() * 1000) + this.settings.interval);\n    this.obstacleInterval = window.setTimeout(generateObstacles, rand);\n  }.bind(this);\n\n  generateObstacles();\n};\n\nGame.prototype.start = function () {\n  $(\".obstacle\").remove();\n  this.dino.style.bottom = \"22px\";\n  $(\"#welcome-message\").hide();\n  $(\"#scoreboard\").hide();\n  this.started = true;\n  this.scoreInterval = window.setInterval(this.incrementScore.bind(this), 50);\n  this.collisionInterval = window.setInterval(this.checkCollision.bind(this), 10);\n  this.doubleScoreInterval = window.setInterval(this.doubleScore.bind(this), this.settings.doubleScoreInterval);\n  this.slideBackgroundInterval = window.setInterval(this.slideBackground.bind(this), 10);\n\n  this.init();\n};\n\nGame.prototype.stop = function () {\n  //show user their score\n  var finalScore = document.getElementById(\"final-score\");\n  finalScore.innerHTML = this.score;\n  $(\"#scoreboard\").show();\n\n  //stop all obstacle animations\n  //this.obstalces\n  this.obstacles.forEach(function(obstalce){\n    var styles = window.getComputedStyle(obstalce);\n    var newLeft = styles.getPropertyValue('left');\n    obstalce.style.left = newLeft;\n  });\n\n  var dinoStyles = window.getComputedStyle(this.dino);\n  var currentBottom = dinoStyles.getPropertyValue('bottom');\n  this.dino.style.bottom = currentBottom;\n\n  //clear timers\n  window.clearInterval(this.scoreInterval);\n  window.clearInterval(this.collisionInterval);\n  window.clearInterval(this.obstacleInterval);\n  window.clearInterval(this.doubleScoreInterval);\n  window.clearInterval(this.slideBackgroundInterval);\n\n\n  this.started = false;\n  this.score = 0;\n  // this.obstacles = [];\n};\n\n//Adds obstacle to Game's queue of obstalces\nGame.prototype.addObstacle = function (obstacle) {\n  this.obstacles.push(obstacle);\n};\n\nGame.prototype.removeObstacle = function () {\n  this.obstacles.shift();\n};\n\nGame.prototype.clearAllObstacles = function () {\n  if (this.obstacles.length > 0) {\n    this.obstacles.forEach(function(obstacle){\n      this.removeObstacle();\n      this.field.removeChild(obstacle);\n    }.bind(this));\n  }\n};\n\nGame.prototype.incrementScore = function () {\n  this.score += 1;\n  var scoreLabel = document.getElementById(\"score\");\n  scoreLabel.innerHTML = this.score;\n};\n\nGame.prototype.doubleScore = function () {\n  this.score *= 2;\n  var scoreLabel = document.getElementById(\"score\");\n  scoreLabel.innerHTML = this.score;\n\n  //show the window notifying player their score has doubled\n  var scoreWindow = document.getElementById(\"double-score-window\");\n  scoreWindow.style.opacity = 1;\n  scoreWindow.style.top = \"50px\";\n  scoreWindow.style.transform = \"rotate(360deg)\";\n\n  //hide the window 3 seconds later\n  window.setTimeout(function() {\n    scoreWindow.style.opacity = 0;\n    scoreWindow.style.top = \"-50px\";\n    scoreWindow.style.transform = \"rotate(-360deg)\";\n  }, 3000);\n\n};\n\n//keep sliding background to the left\n//since the background is set to repeat-x, then this is okay\nGame.prototype.slideBackground = function () {\n  x -= 1;\n  this.field.style.backgroundPosition = x + \"px 0\";\n};\n\nGame.prototype.checkCollision = function () {\n  //if collision is true, stop game\n  if (this.obstacles.length > 0) {\n    var obstacle = this.obstacles[0];\n\n    var dinoLeft = $(this.dino).offset().left;\n    var dinoTop = $(this.dino).offset().top;\n    var dinoHeight = $(this.dino).outerHeight(true);\n    var dinoWidth = $(this.dino).outerWidth(true);\n    var totalDinoHeight = dinoTop + dinoHeight + 22;\n    var totalDinoWidth = dinoLeft + dinoWidth;\n\n    var obsLeft = $(obstacle).offset().left;\n    var obsTop = $(obstacle).offset().top;\n    var obsHeight = $(obstacle).outerHeight(true);\n    var obsWidth = $(obstacle).outerWidth(true);\n    var totalObsHeight = obsHeight + obsTop;\n    var totalObsWidth = obsLeft + obsWidth;\n\n    if ( (totalDinoHeight < obsTop) ||\n          (dinoTop > totalObsHeight) ||\n          ((totalDinoWidth) < obsLeft) ||\n          ((dinoLeft + 35) > totalObsWidth)) {\n\n    }\n    else {\n      this.stop();\n    }\n\n  }\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/game.js\n ** module id = 1\n ** module chunks = 0\n **/","var Obstacle = function(game) {\n  this.game = game;\n\n  var max = this.game.settings.maxObstacleDimension;\n  var min = this.game.settings.minObstacleDimension;\n  var diff = max - min;\n\n  this.obstacleHeight = Math.floor((Math.random() * diff) + min);\n  this.obstacleWidth = Math.floor((Math.random() * diff) + min);\n\n  this.domElement = this.generateElement();\n}\n\nObstacle.prototype.generateElement = function () {\n  var gameField = document.getElementById(\"game-field\");\n  var newObstacle = document.createElement(\"div\");\n  newObstacle.className = \"obstacle\";\n\n  //When its transition is complete, remove it from the DOM\n  //also remove it from the queue of obstacles\n  newObstacle.addEventListener(\"transitionend\", function(){\n    if (this.game.started) {\n      gameField.removeChild(newObstacle);\n      this.game.removeObstacle(newObstacle);\n    }\n  }.bind(this));\n\n  //set height and width\n  newObstacle.style.height = this.obstacleHeight.toString() + \"px\";\n  newObstacle.style.width = this.obstacleWidth.toString() + \"px\";\n\n  //this.difficulty.speed is the speed of the transitions\n  newObstacle.style.transition = this.game.settings.speed;\n  newObstacle.style.transitionTimingFunction = \"linear\";\n\n  //webkit\n  newObstacle.style.setProperty(\"-webkit-transition\", this.game.settings.speed);\n  newObstacle.style.setProperty(\"-webkit-transition-timing-function\", \"linear\");\n\n  return newObstacle;\n};\n\nObstacle.prototype.slide = function () {\n  this.domElement.style.left = \"0px\";\n  this.domElement.style.opacity = 1.0;\n};\n\nObstacle.prototype.inherits = function (BaseClass) {\n  function Surrogate () {};\n  Surrogate.prototype = BaseClass.prototype;\n  this.prototype = new Surrogate();\n  this.prototype.constructor = this;\n};\n\nmodule.exports = Obstacle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/obstacle.js\n ** module id = 2\n ** module chunks = 0\n **/","var Dino = function(dinoElement) {\n  this.dino = dinoElement;\n}\n\nDino.prototype.setJumpHeight = function (height) {\n  this.jumpHeight = height;\n};\n\nDino.prototype.jump = function () {\n  if (this.jumpHeight) {\n    this.dino.style.bottom = this.jumpHeight;\n    //add class\n  }\n  else {\n    //makes the dino jump before the game is set\n    //allow user to test out jumping before game starts\n    this.dino.style.bottom = \"200px\";\n  }\n\n  window.setTimeout(function() {\n    this.dino.style.bottom = \"22px\";\n  }.bind(this), 500);\n};\n\n//Try rotating the dino forward intead of ducking\nDino.prototype.duck = function () {\n  // this.dino.style.height = \"50px\";\n  $(this.dino).addClass(\"duck\");\n};\n\nDino.prototype.rise = function () {\n  // this.dino.style.height = \"100px\";\n  $(this.dino).removeClass(\"duck\");\n};\n\nDino.prototype.slideRight = function () {\n  var dinoStyles = window.getComputedStyle(this.dino);\n  var currentLeft = dinoStyles.getPropertyValue('left');\n  var leftInt = parseInt(currentLeft.replace(\"px\", \"\")) + 2;\n  this.dino.style.left = String(leftInt) + \"px\";\n};\n\nDino.prototype.slideLeft = function () {\n  var dinoStyles = window.getComputedStyle(this.dino);\n  var currentLeft = dinoStyles.getPropertyValue('left');\n  var leftInt = parseInt(currentLeft.replace(\"px\", \"\")) - 2;\n  this.dino.style.left = String(leftInt) + \"px\";\n};\n\nmodule.exports = Dino;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/dino.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}